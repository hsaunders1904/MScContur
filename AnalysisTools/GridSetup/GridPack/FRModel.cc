// -*- C++ -*-
//
// FRModel.cc is a part of Herwig - A multi-purpose Monte Carlo event generator
// Copyright (C) 2002-2007 The Herwig Collaboration
//
// Herwig is licenced under version 2 of the GPL, see COPYING for details.
// Please respect the MCnet academic guidelines, see GUIDELINES for details.
//
//
// This is the implementation of the non-inlined, non-templated member
// functions of the FRModel class.
//

#include "FRModel.h"
#include "ThePEG/Interface/ClassDocumentation.h"
#include "ThePEG/Interface/Reference.h"
#include "ThePEG/Interface/Parameter.h"
#include "ThePEG/Persistency/PersistentOStream.h"
#include "ThePEG/Persistency/PersistentIStream.h"
#include "ThePEG/Helicity/Vertex/VertexBase.h"
#include "ThePEG/Utilities/DescribeClass.h"
#include <fstream>

//#include "Herwig/Models/General/ModelGenerator.h"

using namespace ThePEG;
using namespace Herwig;

FRModel::FRModel()
: ZERO_(),
gAXm_(1.0),gVq_(0.5),aEWM1_(127.9),Gf_(1.16637e-05),aS_(0.1184),
ymb_(4.7),ymt_(172),ymtau_(1.777),MZ_(91.1876),MTA_(1.777),
MT_(172),MB_(4.7),MH_(125),MXm_(100.0),MY1_(500.0),
WZ_(2.4952),WW_(2.085),WT_(1.50833649),WH_(0.00407),WY1_(10.0),
aEW_(),G_(),MW_(),ee_(),sw2_(),
cw_(),sw_(),g1_(),gw_(),vev_(),
lam_(),yb_(),yt_(),ytau_(),muH_()

{}

IBPtr FRModel::clone() const {
  return new_ptr(*this);
}

IBPtr FRModel::fullclone() const {
  return new_ptr(*this);
}

void FRModel::doinit() {
     ZERO_ = 0.0;
   aEW_ = (1.0/aEWM1());
   G_ = ((2.0*sqrt(aS()))*sqrt(pi));
   MW_ = sqrt(((sqr(MZ())/2.0)+sqrt(((pow(MZ(),4.0)/4.0)-(((aEW()*pi)*sqr(MZ()))/(Gf()*sqrt(2.0)))))));
   ee_ = ((2.0*sqrt(aEW()))*sqrt(pi));
   sw2_ = (1.0-(sqr(MW())/sqr(MZ())));
   cw_ = sqrt((1.0-sw2()));
   sw_ = sqrt(sw2());
   g1_ = (ee()/cw());
   gw_ = (ee()/sw());
   vev_ = (((2.0*MW())*sw())/ee());
   lam_ = (sqr(MH())/(2.0*sqr(vev())));
   yb_ = ((ymb()*sqrt(2.0))/vev());
   yt_ = ((ymt()*sqrt(2.0))/vev());
   ytau_ = ((ymtau()*sqrt(2.0))/vev());
   muH_ = sqrt((lam()*sqr(vev())));
  BSMModel::doinit();
  
  writeParamCard();
}

void FRModel::doinitrun() {
  BSMModel::doinitrun();
  writeParamCard();
}

void FRModel::persistentOutput(PersistentOStream & os) const {
  os << ZERO_
<< gAXm_<< gVq_<< aEWM1_<< Gf_<< aS_
<< ymb_<< ymt_<< ymtau_<< MZ_<< MTA_
<< MT_<< MB_<< MH_<< MXm_<< MY1_
<< WZ_<< WW_<< WT_<< WH_<< WY1_
<< aEW_<< G_<< MW_<< ee_<< sw2_
<< cw_<< sw_<< g1_<< gw_<< vev_
<< lam_<< yb_<< yt_<< ytau_<< muH_
 ;
}

void FRModel::persistentInput(PersistentIStream & is, int) {
  is >> ZERO_
>> gAXm_>> gVq_>> aEWM1_>> Gf_>> aS_
>> ymb_>> ymt_>> ymtau_>> MZ_>> MTA_
>> MT_>> MB_>> MH_>> MXm_>> MY1_
>> WZ_>> WW_>> WT_>> WH_>> WY1_
>> aEW_>> G_>> MW_>> ee_>> sw2_
>> cw_>> sw_>> g1_>> gw_>> vev_
>> lam_>> yb_>> yt_>> ytau_>> muH_
 ;
}

void FRModel::writeParamCard() const {
  ofstream card("param_card.dat");

  card 
    << "#####################################################\n"
    << "## DO NOT EDIT - GENERATED BY HERWIG UFO CONVERTER ##\n"
    << "#####################################################\n\n";

  card 
    << "Block MASS\n"
<< "   23 " << MZ() << " # MZ\n"
<< "   15 " << MTA() << " # MTA\n"
<< "    6 " << MT() << " # MT\n"
<< "    5 " << MB() << " # MB\n"
<< "   25 " << MH() << " # MH\n"
<< "  9000005 " << MXm() << " # MXm\n"
<< "  9000006 " << MY1() << " # MY1\n"
<< "Block DMINPUTS\n"
<< "    1 " << gAXm() << " # gAXm\n"
<< "    2 " << gVq() << " # gVq\n"
<< "Block SMINPUTS\n"
<< "    1 " << aEWM1() << " # aEWM1\n"
<< "    2 " << Gf() << " # Gf\n"
<< "    3 " << aS() << " # aS\n"
<< "Block YUKAWA\n"
<< "    5 " << ymb() << " # ymb\n"
<< "    6 " << ymt() << " # ymt\n"
<< "   15 " << ymtau() << " # ymtau\n"
<< "DECAY  23 " << WZ() << "\n"
<< "DECAY  24 " << WW() << "\n"
<< "DECAY   6 " << WT() << "\n"
<< "DECAY  25 " << WH() << "\n"
<< "DECAY 9000006 " << WY1() << "\n"
    << '\n';

  card.close();
}

// Static variable needed for the type description system in ThePEG.
DescribeClass<FRModel,BSMModel>
  describeThePEGFRModel("Herwig::FRModel", "FRModel.so");

void FRModel::Init() {
  


static ClassDocumentation<FRModel> documentation
  ("The FRModel class inherits from BSMModel"
   "and supplies additional couplings and access to the FRModel"
   "vertices for helicity amplitude calculations" );

 static Parameter<FRModel, double> interfacegAXm
  ("gAXm",
   "The interface for parameter gAXm",
   &FRModel::gAXm_, 1.0, 0, 0,
   false, false, Interface::nolimits);
static Parameter<FRModel, double> interfacegVq
  ("gVq",
   "The interface for parameter gVq",
   &FRModel::gVq_, 0.5, 0, 0,
   false, false, Interface::nolimits);
static Parameter<FRModel, double> interfaceaEWM1
  ("aEWM1",
   "The interface for parameter aEWM1",
   &FRModel::aEWM1_, 127.9, 0, 0,
   false, false, Interface::nolimits);
static Parameter<FRModel, double> interfaceGf
  ("Gf",
   "The interface for parameter Gf",
   &FRModel::Gf_, 1.16637e-05, 0, 0,
   false, false, Interface::nolimits);
static Parameter<FRModel, double> interfaceaS
  ("aS",
   "The interface for parameter aS",
   &FRModel::aS_, 0.1184, 0, 0,
   false, false, Interface::nolimits);
static Parameter<FRModel, double> interfaceymb
  ("ymb",
   "The interface for parameter ymb",
   &FRModel::ymb_, 4.7, 0, 0,
   false, false, Interface::nolimits);
static Parameter<FRModel, double> interfaceymt
  ("ymt",
   "The interface for parameter ymt",
   &FRModel::ymt_, 172, 0, 0,
   false, false, Interface::nolimits);
static Parameter<FRModel, double> interfaceymtau
  ("ymtau",
   "The interface for parameter ymtau",
   &FRModel::ymtau_, 1.777, 0, 0,
   false, false, Interface::nolimits);
static Parameter<FRModel, double> interfaceMZ
  ("MZ",
   "The interface for parameter MZ",
   &FRModel::MZ_, 91.1876, 0, 0,
   false, false, Interface::nolimits);
static Parameter<FRModel, double> interfaceMTA
  ("MTA",
   "The interface for parameter MTA",
   &FRModel::MTA_, 1.777, 0, 0,
   false, false, Interface::nolimits);
static Parameter<FRModel, double> interfaceMT
  ("MT",
   "The interface for parameter MT",
   &FRModel::MT_, 172, 0, 0,
   false, false, Interface::nolimits);
static Parameter<FRModel, double> interfaceMB
  ("MB",
   "The interface for parameter MB",
   &FRModel::MB_, 4.7, 0, 0,
   false, false, Interface::nolimits);
static Parameter<FRModel, double> interfaceMH
  ("MH",
   "The interface for parameter MH",
   &FRModel::MH_, 125, 0, 0,
   false, false, Interface::nolimits);
static Parameter<FRModel, double> interfaceMXm
  ("MXm",
   "The interface for parameter MXm",
   &FRModel::MXm_, 100.0, 0, 0,
   false, false, Interface::nolimits);
static Parameter<FRModel, double> interfaceMY1
  ("MY1",
   "The interface for parameter MY1",
   &FRModel::MY1_, 500.0, 0, 0,
   false, false, Interface::nolimits);
static Parameter<FRModel, double> interfaceWZ
  ("WZ",
   "The interface for parameter WZ",
   &FRModel::WZ_, 2.4952, 0, 0,
   false, false, Interface::nolimits);
static Parameter<FRModel, double> interfaceWW
  ("WW",
   "The interface for parameter WW",
   &FRModel::WW_, 2.085, 0, 0,
   false, false, Interface::nolimits);
static Parameter<FRModel, double> interfaceWT
  ("WT",
   "The interface for parameter WT",
   &FRModel::WT_, 1.50833649, 0, 0,
   false, false, Interface::nolimits);
static Parameter<FRModel, double> interfaceWH
  ("WH",
   "The interface for parameter WH",
   &FRModel::WH_, 0.00407, 0, 0,
   false, false, Interface::nolimits);
static Parameter<FRModel, double> interfaceWY1
  ("WY1",
   "The interface for parameter WY1",
   &FRModel::WY1_, 10.0, 0, 0,
   false, false, Interface::nolimits);


}


